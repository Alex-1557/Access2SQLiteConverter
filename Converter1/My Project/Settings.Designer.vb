'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace My
    
    <Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.1.0.0"),  _
     Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)>  _
    Partial Friend NotInheritable Class MySettings
        Inherits Global.System.Configuration.ApplicationSettingsBase
        
        Private Shared defaultInstance As MySettings = CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New MySettings()),MySettings)
        
#Region "My.Settings Auto-Save Functionality"
#If _MyType = "WindowsForms" Then
    Private Shared addedHandler As Boolean

    Private Shared addedHandlerLockObject As New Object

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
    Private Shared Sub AutoSaveSettings(sender As Global.System.Object, e As Global.System.EventArgs)
        If My.Application.SaveMySettingsOnExit Then
            My.Settings.Save()
        End If
    End Sub
#End If
#End Region
        
        Public Shared ReadOnly Property [Default]() As MySettings
            Get
                
#If _MyType = "WindowsForms" Then
               If Not addedHandler Then
                    SyncLock addedHandlerLockObject
                        If Not addedHandler Then
                            AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                            addedHandler = True
                        End If
                    End SyncLock
                End If
#End If
                Return defaultInstance
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.SpecialSettingAttribute(Global.System.Configuration.SpecialSetting.ConnectionString),  _
         Global.System.Configuration.DefaultSettingValueAttribute("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=G:\Projects\ATI\Access\RtgNtDat.accd"& _ 
            "b")>  _
        Public ReadOnly Property Jet() As String
            Get
                Return CType(Me("Jet"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.SpecialSettingAttribute(Global.System.Configuration.SpecialSetting.ConnectionString),  _
         Global.System.Configuration.DefaultSettingValueAttribute("Provider=Microsoft.ACE.OLEDB.12.0;Data Source=G:\Projects\ATI\Access\RtgNtDat.acc"& _ 
            "db;Persist Security Info=False;")>  _
        Public ReadOnly Property ACE() As String
            Get
                Return CType(Me("ACE"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select  `Name`,`Source`,`SampleTargets`,`SampleValues`,`Coeffs`,`ZeroSample`,`New"& _ 
            "ZeroSample`,`InfinitySample`,`NewInfinitySample`,`Description`,`MaxNormPrcnt`,`M"& _ 
            "inNormPrcnt`,`SampleTime`,`LastRezero` from `calibdata`;")>  _
        Public ReadOnly Property CalibSQL() As String
            Get
                Return CType(Me("CalibSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `Name`,`Address `,`CardModel`,`CardSetup`,`MasterCard` from `carddata`;")>  _
        Public ReadOnly Property CardSQL() As String
            Get
                Return CType(Me("CardSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `RecipeName`,`CtrlName`,`CtrlSignal`,`CtrlNumber`,`CtrlLogic`,`Description"& _ 
            "`,`CtrlType`,`DigOutput`,`GaugeOutput` from `controldata`;")>  _
        Public ReadOnly Property ControlSQL() As String
            Get
                Return CType(Me("ControlSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `Name`,`DataType`,`Initialize`,`Save` from `coredata`;")>  _
        Public ReadOnly Property CoreSQL() As String
            Get
                Return CType(Me("CoreSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `ID`,`GaugeName`,`Description`,`GaugeType`,`IsotopeType`,`GaugeOn`,`Profil"& _ 
            "eGauge`,`StripWidth`,`NomLineSpeed`,`ScanSpeed`,`ScanMode`,`Calibration`,`SPC`,`"& _ 
            "RecipeName`,`Recipe ID`,`Multiplier`,`Compensation`,`Filter`,`UpdateRate`,`StatL"& _ 
            "ength`,`SetPoint`,`SigFormat`,`WarningEnable`,`WarningLow`,`WarningHigh`,`AlarmE"& _ 
            "nable`,`AlarmLow`,`AlarmHigh`,`ActiveFilter`,`Recording`,`ExceptReport`,`Reporti"& _ 
            "ng`,`PrintGraph`,`DistModeDivider`,`RecordingRate`,`Seperation`,`StripLength`,`A"& _ 
            "OLow`,`AOHigh`,`AOLow1`,`AOHigh1`,`AOLow2`,`AOHigh2`,`AOLow3`,`AOHigh3`,`Input1`"& _ 
            ",`Input2`,`Input3`,`Input4`,`Input5`,`Input6`,`Input7`,`Input8`,`Input9`,`Output"& _ 
            "1`,`Output2`,`Output3`,`Output4`,`Output5`,`Output6`,`Output7`,`Output8`,`Output"& _ 
            "9`,`CDPulsePerUnit`,`LeftMargin`,`LeftTrim`,`RightTrim`,`RightMargin`,`FixedPosi"& _ 
            "tion`,`NumOfSteps`,`TravSpeed`,`RetSpeed`,`MotorNumber`,`CDOffset`,`K_Prop`,`K_I"& _ 
            "ntegr`,`K_Deriv`,`FFMaxLineSpeed`,`FFMinLineSpeed`,`MAFilterN`,`LimitPlus`,`Limi"& _ 
            "tMinus`,`ZoningEnable`,`ZoneABeg`,`ZoneAEnd`,`ZoneBBeg`,`ZoneBEnd`,`Zone1Beg`,`Z"& _ 
            "one1End`,`Zone2Beg`,`Zone2End`,`Zone3Beg`,`Zone3End`,`Zone4Beg`,`Zone4End`,`Zone"& _ 
            "5Beg`,`Zone5End`,`Zone6Beg`,`Zone6End`,`Zone7Beg`,`Zone7End`,`Zone8Beg`,`Zone8En"& _ 
            "d`,`Zone9Beg`,`Zone9End`,`Zone10Beg`,`Zone10End`,`Zone11Beg`,`Zone11End`,`Zone12"& _ 
            "Beg`,`Zone12End`,`DIO1`,`DIO2`,`DIO3`,`DIO4`,`DIO5`,`DIO6`,`DIO7`,`DIO8`,`DIO9`,"& _ 
            "`DIO10`,`DIO11`,`DIO12`,`RecordIfWarnLow`,`CountsCorrOn` from `gaugedata`;")>  _
        Public ReadOnly Property GaugeSQL() As String
            Get
                Return CType(Me("GaugeSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `ID`,`Name`,`GaugeName`,`RecipeName`,`Description` from `recipedata`;")>  _
        Public ReadOnly Property RecipeSQL() As String
            Get
                Return CType(Me("RecipeSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `SignalDelay`,`RecipeName`,`SignalName`,`SignalNumber`,`SignalLogic`,`Inpu"& _ 
            "tType0`,`InputName0`,`InputLogic0`,`InputType1`,`InputName1`,`InputLogic1`,`Inpu"& _ 
            "tType2`,`InputName2`,`InputLogic2`,`InputType3`,`InputName3`,`InputLogic3`,`Inpu"& _ 
            "tType4`,`InputName4`,`InputLogic4`,`InputType5`,`InputName5`,`InputLogic5`,`Inpu"& _ 
            "tType6`,`InputName6`,`InputLogic6`,`InputType7`,`InputName7`,`InputLogic7` from "& _ 
            "`signaldata`;")>  _
        Public ReadOnly Property SignalSQL() As String
            Get
                Return CType(Me("SignalSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `Name`,`RecipeName`,`Source`,`Interval`,`StatSample`,`CpkHigh`,`CpkLow`,`X"& _ 
            "barEnable`,`XbarMean`,`XbarUCL`,`XbarLCL`,`RbarEnable`,`RbarMean`,`RbarUCL`,`Rba"& _ 
            "rLCL`,`ProdSpecEnable`,`ProdSpecUSL`,`ProdSpecLSL`,`ActiveFilterComp` from `spcd"& _ 
            "ata`;")>  _
        Public ReadOnly Property SpcSQL() As String
            Get
                Return CType(Me("SpcSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("select `RecipeName`,`GraphCaption`,`Style`,`WinNo`,`GaugeName`,`SetPoint`,`BackCo"& _ 
            "lor`,`BorderColor`,`Left`,`Top`,`Width`,`Height`,`GphRng`,`GphRngInc`,`SetPtInc`"& _ 
            ",`DataPnts`,`DataColorOn`,`DataType`,`DataColor`,`AlarmColor`,`WarningColor`,`No"& _ 
            "rmalColor`,`LineWidth`,`FontSize`,`ShowAlarmLine`,`ShowWarnLine`,`Xunits`,`Yunit"& _ 
            "s`,`ProfileStyle`,`LastNAveraged`,`Profile` from `viewdata`;")>  _
        Public ReadOnly Property ViewSQL() As String
            Get
                Return CType(Me("ViewSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("Data Source=H:\Tmp\Out.db;Version=3;")>  _
        Public ReadOnly Property SQLite() As String
            Get
                Return CType(Me("SQLite"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `calibdata` (`Name`,`Source`,`SampleTargets`,`SampleValues`,`Coeffs`,"& _ 
            "`ZeroSample`,`NewZeroSample`,`InfinitySample`,`NewInfinitySample`,`Description`,"& _ 
            "`MaxNormPrcnt`,`MinNormPrcnt`,`SampleTime`,`LastRezero`) VALUES ")>  _
        Public ReadOnly Property CalibInsert() As String
            Get
                Return CType(Me("CalibInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `carddata` (`Name`,`Address`,`CardModel`,`CardSetup`,`MasterCard`) VA"& _ 
            "LUES ")>  _
        Public ReadOnly Property CardInsert() As String
            Get
                Return CType(Me("CardInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `controldata` (`RecipeName`,`CtrlName`,`CtrlSignal`,`CtrlNumber`,`Ctr"& _ 
            "lLogic`,`Description`,`CtrlType`,`DigOutput`,`GaugeOutput`) VALUES ")>  _
        Public ReadOnly Property ControlInsert() As String
            Get
                Return CType(Me("ControlInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `coredata` (`Name`,`DataType`,`Initialize`,`Save`) VALUES ")>  _
        Public ReadOnly Property CoreInsert() As String
            Get
                Return CType(Me("CoreInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `gaugedata` (`ID`,`GaugeName`,`Description`,`GaugeType`,`IsotopeType`"& _ 
            ",`GaugeOn`,`ProfileGauge`,`StripWidth`,`NomLineSpeed`,`ScanSpeed`,`ScanMode`,`Ca"& _ 
            "libration`,`SPC`,`RecipeName`,`Recipe ID`,`Multiplier`,`Compensation`,`Filter`,`"& _ 
            "UpdateRate`,`StatLength`,`SetPoint`,`SigFormat`,`WarningEnable`,`WarningLow`,`Wa"& _ 
            "rningHigh`,`AlarmEnable`,`AlarmLow`,`AlarmHigh`,`ActiveFilter`,`Recording`,`Exce"& _ 
            "ptReport`,`Reporting`,`PrintGraph`,`DistModeDivider`,`RecordingRate`,`Seperation"& _ 
            "`,`StripLength`,`AOLow`,`AOHigh`,`AOLow1`,`AOHigh1`,`AOLow2`,`AOHigh2`,`AOLow3`,"& _ 
            "`AOHigh3`,`Input1`,`Input2`,`Input3`,`Input4`,`Input5`,`Input6`,`Input7`,`Input8"& _ 
            "`,`Input9`,`Output1`,`Output2`,`Output3`,`Output4`,`Output5`,`Output6`,`Output7`"& _ 
            ",`Output8`,`Output9`,`CDPulsePerUnit`,`LeftMargin`,`LeftTrim`,`RightTrim`,`Right"& _ 
            "Margin`,`FixedPosition`,`NumOfSteps`,`TravSpeed`,`RetSpeed`,`MotorNumber`,`CDOff"& _ 
            "set`,`K_Prop`,`K_Integr`,`K_Deriv`,`FFMaxLineSpeed`,`FFMinLineSpeed`,`MAFilterN`"& _ 
            ",`LimitPlus`,`LimitMinus`,`ZoningEnable`,`ZoneABeg`,`ZoneAEnd`,`ZoneBBeg`,`ZoneB"& _ 
            "End`,`Zone1Beg`,  `Zone1End`,`Zone2Beg`,`Zone2End`,`Zone3Beg`,`Zone3End`,`Zone4B"& _ 
            "eg`,`Zone4End`,`Zone5Beg`,`Zone5End`,`Zone6Beg`,`Zone6End`,`Zone7Beg`,`Zone7End`"& _ 
            ",`Zone8Beg`,`Zone8End`,`Zone9Beg`,`Zone9End`,`Zone10Beg`,`Zone10End`,`Zone11Beg`"& _ 
            ",`Zone11End`,`Zone12Beg`,`Zone12End`,`DIO1`,`DIO2`,`DIO3`,`DIO4`,`DIO5`,`DIO6`,`"& _ 
            "DIO7`,`DIO8`,`DIO9`,`DIO10`,`DIO11`,`DIO12`,`RecordIfWarnLow`,`CountsCorrOn`) VA"& _ 
            "LUES ")>  _
        Public ReadOnly Property GaugeInsert() As String
            Get
                Return CType(Me("GaugeInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `recipedata` (`ID`,`Name`,`GaugeName`,`RecipeName`,`Description`) VAL"& _ 
            "UES ")>  _
        Public ReadOnly Property RecipeInsert() As String
            Get
                Return CType(Me("RecipeInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `signaldata` (`SignalDelay`,`RecipeName`,`SignalName`,`SignalNumber`,"& _ 
            "`SignalLogic`,`InputType0`,`InputName0`,`InputLogic0`,`InputType1`,`InputName1`,"& _ 
            "`InputLogic1`,`InputType2`,`InputName2`,`InputLogic2`,`InputType3`,`InputName3`,"& _ 
            "`InputLogic3`,`InputType4`,`InputName4`,`InputLogic4`,`InputType5`,`InputName5`,"& _ 
            "`InputLogic5`,`InputType6`,`InputName6`,`InputLogic6`,`InputType7`,`InputName7`,"& _ 
            "`InputLogic7`) VALUES ")>  _
        Public ReadOnly Property SignalInsert() As String
            Get
                Return CType(Me("SignalInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `spcdata` (`Name`,`RecipeName`,`Source`,`Interval`,`StatSample`,`CpkH"& _ 
            "igh`,`CpkLow`,`XbarEnable`,`XbarMean`,`XbarUCL`,`XbarLCL`,`RbarEnable`,`RbarMean"& _ 
            "`,`RbarUCL`,`RbarLCL`,`ProdSpecEnable`,`ProdSpecUSL`,`ProdSpecLSL`,`ActiveFilter"& _ 
            "Comp`) VALUES ")>  _
        Public ReadOnly Property SpcInsert() As String
            Get
                Return CType(Me("SpcInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `viewdata` (`RecipeName`,`GraphCaption`,`Style`,`WinNo`,`GaugeName`,`"& _ 
            "SetPoint`,`BackColor`,`BorderColor`,`Left`,`Top`,`Width`,`Height`,`GphRng`,`GphR"& _ 
            "ngInc`,`SetPtInc`,`DataPnts`,`DataColorOn`,`DataType`,`DataColor`,`AlarmColor`,`"& _ 
            "WarningColor`,`NormalColor`,`LineWidth`,`FontSize`,`ShowAlarmLine`,`ShowWarnLine"& _ 
            "`,`Xunits`,`Yunits`,`ProfileStyle`,`LastNAveraged`,`Profile`) VALUES ")>  _
        Public ReadOnly Property ViewInsert() As String
            Get
                Return CType(Me("ViewInsert"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("SELECT `LastName`,`FirstName`,`UserName`,`PassWord`,`ChangeModes`,`RcpEdit`,`ggEd"& _ 
            "it`,`gphChange`,`ExitApp`,`StartApp`,`Calib`,`PCTimeMod`,`Prnt`,`PicPath`,`Pictu"& _ 
            "re`,`MeasModeChange`,`IOCardEdit`,`ShellToDos`,`EditUsers`,`AdvGGEdit`,`CalEdit`"& _ 
            ",`AdvRcpEdit`,`SmartGauge`,`StorePassword` FROM `PRIV`")>  _
        Public ReadOnly Property PrivSQL() As String
            Get
                Return CType(Me("PrivSQL"),String)
            End Get
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO `priv` (`LastName`,`FirstName`,`UserName`,`PassWord`,`ChangeModes`,`R"& _ 
            "cpEdit`,`ggEdit`,`gphChange`,`ExitApp`,`StartApp`,`Calib`,`PCTimeMod`,`Prnt`,`Pi"& _ 
            "cPath`,`Picture`,`MeasModeChange`,`IOCardEdit`,`ShellToDos`,`EditUsers`,`AdvGGEd"& _ 
            "it`,`CalEdit`,`AdvRcpEdit`,`SmartGauge`,`StorePassword`) VALUES ")>  _
        Public Property PrivInsert() As String
            Get
                Return CType(Me("PrivInsert"),String)
            End Get
            Set
                Me("PrivInsert") = value
            End Set
        End Property
    End Class
End Namespace

Namespace My
    
    <Global.Microsoft.VisualBasic.HideModuleNameAttribute(),  _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()>  _
    Friend Module MySettingsProperty
        
        <Global.System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")>  _
        Friend ReadOnly Property Settings() As Global.AtiConverter.My.MySettings
            Get
                Return Global.AtiConverter.My.MySettings.Default
            End Get
        End Property
    End Module
End Namespace
